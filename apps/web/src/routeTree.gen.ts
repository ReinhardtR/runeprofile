/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UsernameImport } from './routes/$username'
import { Route as IndexImport } from './routes/index'
import { Route as InfoGuideImport } from './routes/info/guide'
import { Route as InfoAliasImport } from './routes/info/alias'
import { Route as ClanNameImport } from './routes/clan/$name'

// Create/Update Routes

const UsernameRoute = UsernameImport.update({
  id: '/$username',
  path: '/$username',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InfoGuideRoute = InfoGuideImport.update({
  id: '/info/guide',
  path: '/info/guide',
  getParentRoute: () => rootRoute,
} as any)

const InfoAliasRoute = InfoAliasImport.update({
  id: '/info/alias',
  path: '/info/alias',
  getParentRoute: () => rootRoute,
} as any)

const ClanNameRoute = ClanNameImport.update({
  id: '/clan/$name',
  path: '/clan/$name',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$username': {
      id: '/$username'
      path: '/$username'
      fullPath: '/$username'
      preLoaderRoute: typeof UsernameImport
      parentRoute: typeof rootRoute
    }
    '/clan/$name': {
      id: '/clan/$name'
      path: '/clan/$name'
      fullPath: '/clan/$name'
      preLoaderRoute: typeof ClanNameImport
      parentRoute: typeof rootRoute
    }
    '/info/alias': {
      id: '/info/alias'
      path: '/info/alias'
      fullPath: '/info/alias'
      preLoaderRoute: typeof InfoAliasImport
      parentRoute: typeof rootRoute
    }
    '/info/guide': {
      id: '/info/guide'
      path: '/info/guide'
      fullPath: '/info/guide'
      preLoaderRoute: typeof InfoGuideImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/clan/$name': typeof ClanNameRoute
  '/info/alias': typeof InfoAliasRoute
  '/info/guide': typeof InfoGuideRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/clan/$name': typeof ClanNameRoute
  '/info/alias': typeof InfoAliasRoute
  '/info/guide': typeof InfoGuideRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$username': typeof UsernameRoute
  '/clan/$name': typeof ClanNameRoute
  '/info/alias': typeof InfoAliasRoute
  '/info/guide': typeof InfoGuideRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$username' | '/clan/$name' | '/info/alias' | '/info/guide'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$username' | '/clan/$name' | '/info/alias' | '/info/guide'
  id:
    | '__root__'
    | '/'
    | '/$username'
    | '/clan/$name'
    | '/info/alias'
    | '/info/guide'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  UsernameRoute: typeof UsernameRoute
  ClanNameRoute: typeof ClanNameRoute
  InfoAliasRoute: typeof InfoAliasRoute
  InfoGuideRoute: typeof InfoGuideRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  UsernameRoute: UsernameRoute,
  ClanNameRoute: ClanNameRoute,
  InfoAliasRoute: InfoAliasRoute,
  InfoGuideRoute: InfoGuideRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$username",
        "/clan/$name",
        "/info/alias",
        "/info/guide"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$username": {
      "filePath": "$username.tsx"
    },
    "/clan/$name": {
      "filePath": "clan/$name.tsx"
    },
    "/info/alias": {
      "filePath": "info/alias.tsx"
    },
    "/info/guide": {
      "filePath": "info/guide.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
